/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Greeter, GreeterInterface } from "../Greeter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "foo",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000dba38038062000dba833981810160405281019062000037919062000278565b6200006760405180606001604052806022815260200162000d9860229139826200008760201b6200028b1760201c565b80600090805190602001906200007f92919062000156565b5050620004c5565b620001298282604051602401620000a0929190620002fe565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200012d60201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8280546200016490620003ea565b90600052602060002090601f016020900481019282620001885760008555620001d4565b82601f10620001a357805160ff1916838001178555620001d4565b82800160010185558215620001d4579182015b82811115620001d3578251825591602001919060010190620001b6565b5b509050620001e39190620001e7565b5090565b5b8082111562000202576000816000905550600101620001e8565b5090565b60006200021d620002178462000362565b62000339565b9050828152602081018484840111156200023657600080fd5b62000243848285620003b4565b509392505050565b600082601f8301126200025d57600080fd5b81516200026f84826020860162000206565b91505092915050565b6000602082840312156200028b57600080fd5b600082015167ffffffffffffffff811115620002a657600080fd5b620002b4848285016200024b565b91505092915050565b6000620002ca8262000398565b620002d68185620003a3565b9350620002e8818560208601620003b4565b620002f381620004b4565b840191505092915050565b600060408201905081810360008301526200031a8185620002bd565b90508181036020830152620003308184620002bd565b90509392505050565b60006200034562000358565b905062000353828262000420565b919050565b6000604051905090565b600067ffffffffffffffff82111562000380576200037f62000485565b5b6200038b82620004b4565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620003d4578082015181840152602081019050620003b7565b83811115620003e4576000848401525b50505050565b600060028204905060018216806200040357607f821691505b602082108114156200041a576200041962000456565b5b50919050565b6200042b82620004b4565b810181811067ffffffffffffffff821117156200044d576200044c62000485565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6108c380620004d56000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634c970b2f14610046578063a413686214610076578063cfae321714610092575b600080fd5b610060600480360381019061005b919061050f565b6100b0565b60405161006d91906105d5565b60405180910390f35b610090600480360381019061008b9190610538565b610132565b005b61009a6101f9565b6040516100a791906105d5565b60405180910390f35b6060600082136100f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ec9061067a565b60405180910390fd5b6040518060400160405280600381526020017f466f6f00000000000000000000000000000000000000000000000000000000008152509050919050565b6101df60405180606001604052806023815260200161086b602391396000805461015b90610758565b80601f016020809104026020016040519081016040528092919081815260200182805461018790610758565b80156101d45780601f106101a9576101008083540402835291602001916101d4565b820191906000526020600020905b8154815290600101906020018083116101b757829003601f168201915b505050505083610327565b80600090805190602001906101f59291906103ef565b5050565b60606000805461020890610758565b80601f016020809104026020016040519081016040528092919081815260200182805461023490610758565b80156102815780601f1061025657610100808354040283529160200191610281565b820191906000526020600020905b81548152906001019060200180831161026457829003601f168201915b5050505050905090565b61032382826040516024016102a19291906105f7565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506103c6565b5050565b6103c183838360405160240161033f9392919061062e565b6040516020818303038152906040527f2ced7cef000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506103c6565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8280546103fb90610758565b90600052602060002090601f01602090048101928261041d5760008555610464565b82601f1061043657805160ff1916838001178555610464565b82800160010185558215610464579182015b82811115610463578251825591602001919060010190610448565b5b5090506104719190610475565b5090565b5b8082111561048e576000816000905550600101610476565b5090565b60006104a56104a0846106bf565b61069a565b9050828152602081018484840111156104bd57600080fd5b6104c8848285610716565b509392505050565b6000813590506104df81610853565b92915050565b600082601f8301126104f657600080fd5b8135610506848260208601610492565b91505092915050565b60006020828403121561052157600080fd5b600061052f848285016104d0565b91505092915050565b60006020828403121561054a57600080fd5b600082013567ffffffffffffffff81111561056457600080fd5b610570848285016104e5565b91505092915050565b6000610584826106f0565b61058e81856106fb565b935061059e818560208601610725565b6105a781610819565b840191505092915050565b60006105bf601a836106fb565b91506105ca8261082a565b602082019050919050565b600060208201905081810360008301526105ef8184610579565b905092915050565b600060408201905081810360008301526106118185610579565b905081810360208301526106258184610579565b90509392505050565b600060608201905081810360008301526106488186610579565b9050818103602083015261065c8185610579565b905081810360408301526106708184610579565b9050949350505050565b60006020820190508181036000830152610693816105b2565b9050919050565b60006106a46106b5565b90506106b0828261078a565b919050565b6000604051905090565b600067ffffffffffffffff8211156106da576106d96107ea565b5b6106e382610819565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b82818337600083830152505050565b60005b83811015610743578082015181840152602081019050610728565b83811115610752576000848401525b50505050565b6000600282049050600182168061077057607f821691505b60208210811415610784576107836107bb565b5b50919050565b61079382610819565b810181811067ffffffffffffffff821117156107b2576107b16107ea565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4e6f74206e65676174697665206f72207a65726f2076616c7565000000000000600082015250565b61085c8161070c565b811461086757600080fd5b5056fe4368616e67696e67206772656574696e672066726f6d202725732720746f2027257327a264697066735822122006a441f366b5d1bdde75f00d02f9d60ad5b2a54f7a2be5825cbb16b776e9a6d264736f6c634300080400334465706c6f79696e67206120477265657465722077697468206772656574696e673a";

export class Greeter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Greeter> {
    return super.deploy(_greeting, overrides || {}) as Promise<Greeter>;
  }
  getDeployTransaction(
    _greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_greeting, overrides || {});
  }
  attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
